<?phpnamespace App\Http\Controllers;use Illuminate\Http\Request;use App\Http\Requests;use App\Entities\Users;use App\Entities\Role;use App\Repository\UserRepository as user_repo;use App\Repository\CategoryRepository as category_repo;use App\Repository\SubCategoryRepository as sub_category_repo;use Auth;use Tymon\JWTAuth\Facades\JWTAuth;use DateTime;use Log;class SubCategoryController extends Controller {    public function __construct(sub_category_repo $sub_category_repo, category_repo $category_repo, user_repo $user_repo) {        $this->user_repo = $user_repo;        $this->category_repo = $category_repo;        $this->sub_category_repo = $sub_category_repo;    }    public function deleteSubCategory(Request $request) {        $category = $this->sub_category_repo->SubCategoryOfId($request->id);        $this->sub_category_repo->delete($category);    }    public function updateWPCatDetails(Request $request) {//          return response()->json(['res'=>$request->all()], 200);        $data = $request->all();        $option_data = [];        $option = $this->sub_category_repo->SubCategoryOfWpId($data['term_id']);        if (isset($data['taxonomy'])) {            if ($data['taxonomy'] == 'product_cat' || $data['taxonomy'] == 'product_material') {                if (isset($data['parent']) && $data['parent'] != 0) {                    $option_data['parent_id'] = $this->sub_category_repo->SubCategoryOfWpId($data['parent']);                }            }        }        if ($option) {            $option_data['sub_category_name'] = $data['name'];            $this->sub_category_repo->update($option, $option_data);        } else {            $this->createWPCatDetails($request);        }    }    public function createWPCatDetails(Request $request) {        $data = $request->all();        \Log::info('createWPCatDetails: ' . json_encode($data));        $option = [];        $select_id = '';        if ($data['taxonomy'] == "product_brand") {            //Brand            $select_id = 1;        } else if ($data['taxonomy'] == "product_cat") {            //cat            $select_id = 2;            if (isset($data['parent']) && $data['parent'] != 0) {                $option['parent_id'] = $this->sub_category_repo->SubCategoryOfWpId($data['parent']);            }        } else if ($data['taxonomy'] == "product_coll_tax") {            //Collection            $select_id = 3;        } else if ($data['taxonomy'] == "product_room_tax") {            //Room            $select_id = 4;        } else if ($data['taxonomy'] == "product_look_tax") {            //Look            $select_id = 5;        } else if ($data['taxonomy'] == "product_color") {            //Color            $select_id = 6;        } else if ($data['taxonomy'] == "product_condition") {            //Condition            $select_id = 7;        } else if ($data['taxonomy'] == "product_condition") {            //Condition            $select_id = 7;        } else if ($data['taxonomy'] == "product_age") {            //Condition            $select_id = 8;        } else if ($data['taxonomy'] === 'product_material') {            $select_id = 9;        }        if ($select_id != '') {            $option['category_id'] = $this->category_repo->CategoryOfId($select_id);            $option['sub_category_name'] = $data['name'];            $option['wp_term_id'] = $data['term_id'];            $prepared_data = $this->sub_category_repo->prepareData($option);            $this->sub_category_repo->create($prepared_data);        }    }    public function deleteWPCatDetails(Request $request) {        $data = $request->all();        $option = $this->sub_category_repo->SubCategoryOfWpId($data['term_id']);        if ($option) {            $this->sub_category_repo->delete($option);        }    }    public function saveSubCategory(Request $request) {        $data = $request->all();        $data['category_id'] = $this->category_repo->CategoryOfId($data['category_id']);        if ($request->id) {            $details = $this->sub_category_repo->SubCategoryOfId($request->id);            $this->sub_category_repo->update($details, $data);        } else {            $prepared_data = $this->sub_category_repo->prepareData($data);            if ($this->sub_category_repo->create($prepared_data)) {                return response()->json('Created Successfully', 200);            }        }    }    public function getSubCategory(Request $request) {        return $this->sub_category_repo->getSubCategoryById($request->id);    }    public function getSubCategorys(Request $request) {        $filter = $request->all();        $data['draw'] = $filter['draw'];        $category_data_total = $this->sub_category_repo->getSubCategorys($filter);        $data['data'] = $category_data_total['data'];        $data['recordsTotal'] = $category_data_total['total'];        $data['recordsFiltered'] = $this->sub_category_repo->getSubCategorysTotal($filter);        return response()->json($data, 200);    }    public function getAllSubCategorysOfAgeCategory(Request $request) {        $ages = $this->sub_category_repo->getAllSubCategorysOfCategoryId(8);        return $ages;    }    public function getAllSubCategorysOfCategoryId($category_id) {        //if category ==2        $parents = $this->sub_category_repo->getAllSubCategorysOfCategoryId($category_id);        return $this->getAllChildSubCategorysOfParentId($parents);    }    public function getAllChildSubCategorysOfParentId($parents) {        foreach ($parents as $key => $value) {            $parents[$key]['childrens'] = $this->sub_category_repo->getAllChildSubCategorysOfParentId($value['id']);            if (count($parents[$key]['childrens']) > 0) {                $parents[$key]['childrens'] = $this->getAllChildSubCategorysOfParentId($parents[$key]['childrens']);            }        }        return $parents;    }    public function getAllSubCategorusOfProductMaterials($category_id) {        $parents = $this->sub_category_repo->getAllSubCategorysOfCategoryId($category_id);        return $this->getAllChildProductMaterialSubCategorysOfParentId($parents);    }    public function getAllChildProductMaterialSubCategorysOfParentId($parents) {        foreach ($parents as $key => $value) {            $parents[$key]['childrens'] = $this->sub_category_repo->getAllChildProductMaterialSubCategorysOfParentId($value['id']);            if (count($parents[$key]['childrens']) > 0) {                $parents[$key]['childrens'] = $this->getAllChildProductMaterialSubCategorysOfParentId($parents[$key]['childrens']);            }        }        return $parents;    }    public function getAllSubCategorys() {        $result = $this->sub_category_repo->getAllSubCategorys();        return $result;    }    public function changeSubCategoryStatus(Request $request) {        $data = $request->all();        $id = $data['category'];        $data1['status'] = $data['status'];        $details = $this->sub_category_repo->SubCategoryOfId($id);        $this->sub_category_repo->update($details, $data1);    }    public function get_subcategorys_id(Request $request) {        $filter = $request->all();        $data['draw'] = $filter['draw'];        $category_data_total = $this->sub_category_repo->getSubCategorysID($filter);        $data['data'] = $category_data_total['data'];        $data['recordsTotal'] = $category_data_total['total'];        $data['recordsFiltered'] = $this->sub_category_repo->getSubCategorysIDTotal($filter);        return response()->json($data, 200);    }    public function save_storage_price_subcategorys(Request $request) {        $data = $request->all();        $details = $this->sub_category_repo->SubCategoryOfId($request->id);        $temp_data['category_storage_price'] = $data['category_storage_price'];        $this->sub_category_repo->update($details, $temp_data);        return response()->json($data, 200);    }    public function test_data(Request $request) {        $data = '[{"term_id":5917,"name":"Acryllic","slug":"acryllic","term_group":0,"term_taxonomy_id":5917,"taxonomy":"product_material","description":"","parent":0,"count":0,"filter":"raw","term_order":"0"},{"term_id":5910,"name":"Blend","slug":"blend","term_group":0,"term_taxonomy_id":5910,"taxonomy":"product_material","description":"","parent":5901,"count":0,"filter":"raw","term_order":"0"},{"term_id":5894,"name":"Brass","slug":"brass","term_group":0,"term_taxonomy_id":5894,"taxonomy":"product_material","description":"","parent":5891,"count":0,"filter":"raw","term_order":"0"},{"term_id":5896,"name":"Bronze","slug":"bronze","term_group":0,"term_taxonomy_id":5896,"taxonomy":"product_material","description":"","parent":5891,"count":0,"filter":"raw","term_order":"0"},{"term_id":5916,"name":"Ceramic","slug":"ceramic","term_group":0,"term_taxonomy_id":5916,"taxonomy":"product_material","description":"","parent":0,"count":0,"filter":"raw","term_order":"0"},{"term_id":5897,"name":"Chrome","slug":"chrome","term_group":0,"term_taxonomy_id":5897,"taxonomy":"product_material","description":"","parent":5891,"count":0,"filter":"raw","term_order":"0"},{"term_id":5902,"name":"Cotton","slug":"cotton","term_group":0,"term_taxonomy_id":5902,"taxonomy":"product_material","description":"","parent":5901,"count":0,"filter":"raw","term_order":"0"},{"term_id":5901,"name":"Fabric","slug":"fabric","term_group":0,"term_taxonomy_id":5901,"taxonomy":"product_material","description":"","parent":0,"count":0,"filter":"raw","term_order":"0"},{"term_id":5899,"name":"Glass","slug":"glass","term_group":0,"term_taxonomy_id":5899,"taxonomy":"product_material","description":"","parent":0,"count":0,"filter":"raw","term_order":"0"},{"term_id":5911,"name":"Indoor Outdoor","slug":"indoor-outdoor","term_group":0,"term_taxonomy_id":5911,"taxonomy":"product_material","description":"","parent":5901,"count":0,"filter":"raw","term_order":"0"},{"term_id":5892,"name":"Iron","slug":"iron","term_group":0,"term_taxonomy_id":5892,"taxonomy":"product_material","description":"","parent":5891,"count":0,"filter":"raw","term_order":"0"},{"term_id":5906,"name":"Leather","slug":"leather","term_group":0,"term_taxonomy_id":5906,"taxonomy":"product_material","description":"","parent":5901,"count":0,"filter":"raw","term_order":"0"},{"term_id":5903,"name":"Linen","slug":"linen","term_group":0,"term_taxonomy_id":5903,"taxonomy":"product_material","description":"","parent":5901,"count":0,"filter":"raw","term_order":"0"},{"term_id":5915,"name":"Marble","slug":"marble","term_group":0,"term_taxonomy_id":5915,"taxonomy":"product_material","description":"","parent":0,"count":0,"filter":"raw","term_order":"0"},{"term_id":5891,"name":"Metal","slug":"metal","term_group":0,"term_taxonomy_id":5891,"taxonomy":"product_material","description":"","parent":0,"count":0,"filter":"raw","term_order":"0"},{"term_id":5900,"name":"Mirror","slug":"mirror","term_group":0,"term_taxonomy_id":5900,"taxonomy":"product_material","description":"","parent":0,"count":0,"filter":"raw","term_order":"0"},{"term_id":5908,"name":"Mohair","slug":"mohair","term_group":0,"term_taxonomy_id":5908,"taxonomy":"product_material","description":"","parent":5901,"count":0,"filter":"raw","term_order":"0"},{"term_id":5893,"name":"Nickel","slug":"nickel","term_group":0,"term_taxonomy_id":5893,"taxonomy":"product_material","description":"","parent":5891,"count":0,"filter":"raw","term_order":"0"},{"term_id":5898,"name":"Other","slug":"other","term_group":0,"term_taxonomy_id":5898,"taxonomy":"product_material","description":"","parent":5891,"count":0,"filter":"raw","term_order":"0"},{"term_id":5913,"name":"Other","slug":"other-fabric","term_group":0,"term_taxonomy_id":5913,"taxonomy":"product_material","description":"","parent":5901,"count":0,"filter":"raw","term_order":"0"},{"term_id":5919,"name":"Other","slug":"other-2","term_group":0,"term_taxonomy_id":5919,"taxonomy":"product_material","description":"","parent":0,"count":0,"filter":"raw","term_order":"0"},{"term_id":5918,"name":"Resin","slug":"resin","term_group":0,"term_taxonomy_id":5918,"taxonomy":"product_material","description":"","parent":0,"count":0,"filter":"raw","term_order":"0"},{"term_id":5909,"name":"Silk","slug":"silk","term_group":0,"term_taxonomy_id":5909,"taxonomy":"product_material","description":"","parent":5901,"count":0,"filter":"raw","term_order":"0"},{"term_id":5905,"name":"Suede","slug":"suede","term_group":0,"term_taxonomy_id":5905,"taxonomy":"product_material","description":"","parent":5901,"count":0,"filter":"raw","term_order":"0"},{"term_id":5895,"name":"Tin","slug":"tin","term_group":0,"term_taxonomy_id":5895,"taxonomy":"product_material","description":"","parent":5891,"count":0,"filter":"raw","term_order":"0"},{"term_id":5912,"name":"Unknown","slug":"unknown","term_group":0,"term_taxonomy_id":5912,"taxonomy":"product_material","description":"","parent":5901,"count":0,"filter":"raw","term_order":"0"},{"term_id":5907,"name":"Velvet","slug":"velvet","term_group":0,"term_taxonomy_id":5907,"taxonomy":"product_material","description":"","parent":5901,"count":0,"filter":"raw","term_order":"0"},{"term_id":5914,"name":"Wood","slug":"wood","term_group":0,"term_taxonomy_id":5914,"taxonomy":"product_material","description":"","parent":0,"count":0,"filter":"raw","term_order":"0"},{"term_id":5904,"name":"Wool","slug":"wool","term_group":0,"term_taxonomy_id":5904,"taxonomy":"product_material","description":"","parent":5901,"count":0,"filter":"raw","term_order":"0"}]';        $parsedData = json_decode($data, true);        return count($parsedData);////        $materialCategories = [];//        $materialCategoryObj = $this->category_repo->CategoryOfId(10);////        foreach ($parsedData as $key => $term) {////            if ($term['parent'] != 0) {////                $parent_id = $this->sub_category_repo->SubCategoryOfWpId($term['parent']);//                //                $data = [//                    'category_id' => $materialCategoryObj,//                    'sub_category_name' => $term['name'],//                    'wp_term_id' => $term['term_id'],//                    'is_enable' => 1,//                    'order_value' => 0,//                    'parent_id' => $parent_id,//                    'category_storage_price' => null//                ];////                $prepared_data = $this->sub_category_repo->prepareData($data);////                $this->sub_category_repo->create($prepared_data);//            }//        }////        return $materialCategories;    }}